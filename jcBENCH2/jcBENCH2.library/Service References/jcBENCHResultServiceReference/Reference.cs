//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18046
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace jcBENCH2.library.jcBENCHResultServiceReference {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TopResultItem", Namespace="http://schemas.datacontract.org/2004/07/jcBENCH2.wcf.Objects")]
    public partial class TopResultItem : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.DateTime DateOfBenchmarkField;
        
        private string DeviceNameField;
        
        private int ScoreField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateOfBenchmark {
            get {
                return this.DateOfBenchmarkField;
            }
            set {
                if ((this.DateOfBenchmarkField.Equals(value) != true)) {
                    this.DateOfBenchmarkField = value;
                    this.RaisePropertyChanged("DateOfBenchmark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeviceName {
            get {
                return this.DeviceNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DeviceNameField, value) != true)) {
                    this.DeviceNameField = value;
                    this.RaisePropertyChanged("DeviceName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Score {
            get {
                return this.ScoreField;
            }
            set {
                if ((this.ScoreField.Equals(value) != true)) {
                    this.ScoreField = value;
                    this.RaisePropertyChanged("Score");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SubmitResultItem", Namespace="http://schemas.datacontract.org/2004/07/jcBENCH2.wcf.Objects")]
    public partial class SubmitResultItem : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string DeviceNameField;
        
        private int ScoreField;
        
        private System.DateTime TimeOfBenchmarkField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeviceName {
            get {
                return this.DeviceNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DeviceNameField, value) != true)) {
                    this.DeviceNameField = value;
                    this.RaisePropertyChanged("DeviceName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Score {
            get {
                return this.ScoreField;
            }
            set {
                if ((this.ScoreField.Equals(value) != true)) {
                    this.ScoreField = value;
                    this.RaisePropertyChanged("Score");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TimeOfBenchmark {
            get {
                return this.TimeOfBenchmarkField;
            }
            set {
                if ((this.TimeOfBenchmarkField.Equals(value) != true)) {
                    this.TimeOfBenchmarkField = value;
                    this.RaisePropertyChanged("TimeOfBenchmark");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="jcBENCHResultServiceReference.IResultService")]
    public interface IResultService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IResultService/GetTopResults", ReplyAction="http://tempuri.org/IResultService/GetTopResultsResponse")]
        System.IAsyncResult BeginGetTopResults(int numberResults, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<jcBENCH2.library.jcBENCHResultServiceReference.TopResultItem> EndGetTopResults(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IResultService/SubmitResult", ReplyAction="http://tempuri.org/IResultService/SubmitResultResponse")]
        System.IAsyncResult BeginSubmitResult(jcBENCH2.library.jcBENCHResultServiceReference.SubmitResultItem resultItem, System.AsyncCallback callback, object asyncState);
        
        bool EndSubmitResult(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IResultServiceChannel : jcBENCH2.library.jcBENCHResultServiceReference.IResultService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetTopResultsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetTopResultsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<jcBENCH2.library.jcBENCHResultServiceReference.TopResultItem> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<jcBENCH2.library.jcBENCHResultServiceReference.TopResultItem>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SubmitResultCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SubmitResultCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ResultServiceClient : System.ServiceModel.ClientBase<jcBENCH2.library.jcBENCHResultServiceReference.IResultService>, jcBENCH2.library.jcBENCHResultServiceReference.IResultService {
        
        private BeginOperationDelegate onBeginGetTopResultsDelegate;
        
        private EndOperationDelegate onEndGetTopResultsDelegate;
        
        private System.Threading.SendOrPostCallback onGetTopResultsCompletedDelegate;
        
        private BeginOperationDelegate onBeginSubmitResultDelegate;
        
        private EndOperationDelegate onEndSubmitResultDelegate;
        
        private System.Threading.SendOrPostCallback onSubmitResultCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public ResultServiceClient() : 
                base(ResultServiceClient.GetDefaultBinding(), ResultServiceClient.GetDefaultEndpointAddress()) {
        }
        
        public ResultServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(ResultServiceClient.GetBindingForEndpoint(endpointConfiguration), ResultServiceClient.GetEndpointAddress(endpointConfiguration)) {
        }
        
        public ResultServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(ResultServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress)) {
        }
        
        public ResultServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(ResultServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress) {
        }
        
        public ResultServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<GetTopResultsCompletedEventArgs> GetTopResultsCompleted;
        
        public event System.EventHandler<SubmitResultCompletedEventArgs> SubmitResultCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult jcBENCH2.library.jcBENCHResultServiceReference.IResultService.BeginGetTopResults(int numberResults, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetTopResults(numberResults, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<jcBENCH2.library.jcBENCHResultServiceReference.TopResultItem> jcBENCH2.library.jcBENCHResultServiceReference.IResultService.EndGetTopResults(System.IAsyncResult result) {
            return base.Channel.EndGetTopResults(result);
        }
        
        private System.IAsyncResult OnBeginGetTopResults(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int numberResults = ((int)(inValues[0]));
            return ((jcBENCH2.library.jcBENCHResultServiceReference.IResultService)(this)).BeginGetTopResults(numberResults, callback, asyncState);
        }
        
        private object[] OnEndGetTopResults(System.IAsyncResult result) {
            System.Collections.Generic.List<jcBENCH2.library.jcBENCHResultServiceReference.TopResultItem> retVal = ((jcBENCH2.library.jcBENCHResultServiceReference.IResultService)(this)).EndGetTopResults(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetTopResultsCompleted(object state) {
            if ((this.GetTopResultsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetTopResultsCompleted(this, new GetTopResultsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetTopResultsAsync(int numberResults) {
            this.GetTopResultsAsync(numberResults, null);
        }
        
        public void GetTopResultsAsync(int numberResults, object userState) {
            if ((this.onBeginGetTopResultsDelegate == null)) {
                this.onBeginGetTopResultsDelegate = new BeginOperationDelegate(this.OnBeginGetTopResults);
            }
            if ((this.onEndGetTopResultsDelegate == null)) {
                this.onEndGetTopResultsDelegate = new EndOperationDelegate(this.OnEndGetTopResults);
            }
            if ((this.onGetTopResultsCompletedDelegate == null)) {
                this.onGetTopResultsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTopResultsCompleted);
            }
            base.InvokeAsync(this.onBeginGetTopResultsDelegate, new object[] {
                        numberResults}, this.onEndGetTopResultsDelegate, this.onGetTopResultsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult jcBENCH2.library.jcBENCHResultServiceReference.IResultService.BeginSubmitResult(jcBENCH2.library.jcBENCHResultServiceReference.SubmitResultItem resultItem, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSubmitResult(resultItem, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool jcBENCH2.library.jcBENCHResultServiceReference.IResultService.EndSubmitResult(System.IAsyncResult result) {
            return base.Channel.EndSubmitResult(result);
        }
        
        private System.IAsyncResult OnBeginSubmitResult(object[] inValues, System.AsyncCallback callback, object asyncState) {
            jcBENCH2.library.jcBENCHResultServiceReference.SubmitResultItem resultItem = ((jcBENCH2.library.jcBENCHResultServiceReference.SubmitResultItem)(inValues[0]));
            return ((jcBENCH2.library.jcBENCHResultServiceReference.IResultService)(this)).BeginSubmitResult(resultItem, callback, asyncState);
        }
        
        private object[] OnEndSubmitResult(System.IAsyncResult result) {
            bool retVal = ((jcBENCH2.library.jcBENCHResultServiceReference.IResultService)(this)).EndSubmitResult(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSubmitResultCompleted(object state) {
            if ((this.SubmitResultCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SubmitResultCompleted(this, new SubmitResultCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SubmitResultAsync(jcBENCH2.library.jcBENCHResultServiceReference.SubmitResultItem resultItem) {
            this.SubmitResultAsync(resultItem, null);
        }
        
        public void SubmitResultAsync(jcBENCH2.library.jcBENCHResultServiceReference.SubmitResultItem resultItem, object userState) {
            if ((this.onBeginSubmitResultDelegate == null)) {
                this.onBeginSubmitResultDelegate = new BeginOperationDelegate(this.OnBeginSubmitResult);
            }
            if ((this.onEndSubmitResultDelegate == null)) {
                this.onEndSubmitResultDelegate = new EndOperationDelegate(this.OnEndSubmitResult);
            }
            if ((this.onSubmitResultCompletedDelegate == null)) {
                this.onSubmitResultCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSubmitResultCompleted);
            }
            base.InvokeAsync(this.onBeginSubmitResultDelegate, new object[] {
                        resultItem}, this.onEndSubmitResultDelegate, this.onSubmitResultCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override jcBENCH2.library.jcBENCHResultServiceReference.IResultService CreateChannel() {
            return new ResultServiceClientChannel(this);
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IResultService)) {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.MaxReceivedMessageSize = int.MaxValue;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IResultService)) {
                return new System.ServiceModel.EndpointAddress("http://www.jarredcapellman.com/codecamp/ResultService.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding() {
            return ResultServiceClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IResultService);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress() {
            return ResultServiceClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IResultService);
        }
        
        private class ResultServiceClientChannel : ChannelBase<jcBENCH2.library.jcBENCHResultServiceReference.IResultService>, jcBENCH2.library.jcBENCHResultServiceReference.IResultService {
            
            public ResultServiceClientChannel(System.ServiceModel.ClientBase<jcBENCH2.library.jcBENCHResultServiceReference.IResultService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetTopResults(int numberResults, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = numberResults;
                System.IAsyncResult _result = base.BeginInvoke("GetTopResults", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<jcBENCH2.library.jcBENCHResultServiceReference.TopResultItem> EndGetTopResults(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<jcBENCH2.library.jcBENCHResultServiceReference.TopResultItem> _result = ((System.Collections.Generic.List<jcBENCH2.library.jcBENCHResultServiceReference.TopResultItem>)(base.EndInvoke("GetTopResults", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSubmitResult(jcBENCH2.library.jcBENCHResultServiceReference.SubmitResultItem resultItem, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = resultItem;
                System.IAsyncResult _result = base.BeginInvoke("SubmitResult", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndSubmitResult(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("SubmitResult", _args, result)));
                return _result;
            }
        }
        
        public enum EndpointConfiguration {
            
            BasicHttpBinding_IResultService,
        }
    }
}
